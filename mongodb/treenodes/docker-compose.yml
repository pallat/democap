version: '3.8'

services:
  mongo1:
    container_name: mongo1
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongodb1_data:/data/db
    networks:
      - mongo_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo2:
    container_name: mongo2
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27018:27017"
    restart: always
    volumes:
      - mongodb2_data:/data/db
    networks:
      - mongo_network
    depends_on:
      - mongo1
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo3:
    container_name: mongo3
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27019:27017"
    restart: always
    volumes:
      - mongodb3_data:/data/db
    networks:
      - mongo_network
    depends_on:
      - mongo1
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-init:
    image: mongo:latest
    restart: "no"
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy
    networks:
      - mongo_network
    command: >
      mongosh --host mongo1:27017 --eval '
        config = {
          "_id": "rs0",
          "members": [
            {"_id": 0, "host": "mongo1:27017", "priority": 2},
            {"_id": 1, "host": "mongo2:27017", "priority": 1},
            {"_id": 2, "host": "mongo3:27017", "priority": 1}
          ]
        };
        rs.initiate(config);'

volumes:
  mongodb1_data:
  mongodb2_data:
  mongodb3_data:

networks:
  mongo_network:
    driver: bridge